    |                             ^^^^^^

warning: use of deprecated method `indexmap::IndexMap::<K, V, S>::remove`: `remove` disrupts the map order -- use `swap_remove` or `shift_remove` for explicit behavior.
   --> crates/plugin-sdk/src/plugins/remove_non_inheritable_group_attrs.rs:231:36
    |
231 |                 element.attributes.remove(&attr_name);
    |                                    ^^^^^^

warning: unused variable: `obj`
   --> crates/plugin-sdk/src/plugins/convert_style_to_attrs.rs:152:21
    |
152 |         if let Some(obj) = params.as_object() {
    |                     ^^^ help: if this is intentional, prefix it with an underscore: `_obj`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `obj`
  --> crates/plugin-sdk/src/plugins/inline_styles.rs:95:21
   |
95 |         if let Some(obj) = params.as_object() {
   |                     ^^^ help: if this is intentional, prefix it with an underscore: `_obj`

warning: unused variable: `plugin`
   --> crates/plugin-sdk/src/plugins/remove_unknowns_and_defaults/mod.rs:138:13
    |
138 |         let plugin = RemoveUnknownsAndDefaultsPlugin::wi...
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_plugin`

warning: unused variable: `plugin`
   --> crates/plugin-sdk/src/plugins/remove_unknowns_and_defaults/mod.rs:161:13
    |
161 |         let plugin = RemoveUnknownsAndDefaultsPlugin::wi...
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_plugin`

warning: variable `changed` is assigned to, but never used
   --> crates/plugin-sdk/src/plugins/reuse_paths.rs:200:17
    |
200 |         let mut changed = false;
    |                 ^^^^^^^
    |
    = note: consider using `_changed` instead

warning: unused variable: `elem`
   --> crates/plugin-sdk/src/plugins/reuse_paths.rs:241:28
    |
241 |                 for (path, elem) in &mut paths {
    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_elem`

warning: value assigned to `changed` is never read
   --> crates/plugin-sdk/src/plugins/reuse_paths.rs:317:21
    |
317 |                     changed = true;
    |                     ^^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: unused variable: `cached_plugin`
   --> crates/plugin-sdk/src/enhanced_registry.rs:267:25
    |
267 | ...   if let Some(cached_plugin) = cache.get(&resolved_n...
    |                   ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cached_plugin`

warning: unused variable: `name`
   --> crates/plugin-sdk/src/enhanced_registry.rs:458:28
    |
458 | ...dd_to_cache(&self, name: String, plugin: &dyn Plugin) {
    |                       ^^^^ help: if this is intentional, prefix it with an underscore: `_name`

warning: unused variable: `plugin`
   --> crates/plugin-sdk/src/enhanced_registry.rs:458:42
    |
458 | ...elf, name: String, plugin: &dyn Plugin) {
    |                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_plugin`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/test_framework.rs:237:52
    |
237 | ...gin>(&self, mut plugin: P, generator: &dyn TestCaseGe...
    |                ----^^^^^^
    |                |
    |                help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/test_framework.rs:299:54
    |
299 | ...gin>(&self, mut plugin: P, svgo_test_data: &SvgoTestD...
    |                ----^^^^^^
    |                |
    |                help: remove this `mut`

warning: unused variable: `path`
   --> crates/plugin-sdk/src/test_framework.rs:449:32
    |
449 | ...oad_from_directory(path: &str) -> Result<Self> {
    |                       ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: associated function `parse_config` is never used
  --> crates/plugin-sdk/src/plugins/cleanup_attrs.rs:76:8
   |
62 | impl CleanupAttrsPlugin {
   | ----------------------- associated function in this implementation
...
76 |     fn parse_config(params: &Value) -> Result<CleanupAttr...
   |        ^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/cleanup_enable_background.rs:32:5
   |
31 | pub struct CleanupEnableBackgroundPlugin {
   |            ----------------------------- field in this struct
32 |     config: CleanupEnableBackgroundConfig,
   |     ^^^^^^

warning: associated function `parse_config` is never used
  --> crates/plugin-sdk/src/plugins/cleanup_ids/mod.rs:92:8
   |
78 | impl CleanupIdsPlugin {
   | --------------------- associated function in this implementation
...
92 |     fn parse_config(params: &Value) -> Result<CleanupIdsC...
   |        ^^^^^^^^^^^^

warning: fields `path` and `element_name` are never read
   --> crates/plugin-sdk/src/plugins/cleanup_ids/mod.rs:208:5
    |
207 | struct ElementInfo {
    |        ----------- fields in this struct
208 |     path: Vec<usize>,
    |     ^^^^
209 |     element_name: String,
    |     ^^^^^^^^^^^^
    |
    = note: `ElementInfo` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `path` and `attr_name` are never read
   --> crates/plugin-sdk/src/plugins/cleanup_ids/mod.rs:214:5
    |
213 | struct Reference {
    |        --------- fields in this struct
214 |     path: Vec<usize>,
    |     ^^^^
215 |     attr_name: String,
    |     ^^^^^^^^^
    |
    = note: `Reference` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `node_by_id` is never read
   --> crates/plugin-sdk/src/plugins/cleanup_ids/mod.rs:342:5
    |
340 | struct IdApplierVisitor<'a> {
    |        ---------------- field in this struct
341 |     config: &'a CleanupIdsConfig,
342 |     node_by_id: &'a HashMap<String, ElementInfo>,
    |     ^^^^^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/convert_ellipse_to_circle.rs:32:5
   |
31 | pub struct ConvertEllipseToCirclePlugin {
   |            ---------------------------- field in this struct
32 |     config: ConvertEllipseToCircleConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/convert_one_stop_gradients.rs:33:5
   |
32 | pub struct ConvertOneStopGradientsPlugin {
   |            ----------------------------- field in this struct
33 |     config: ConvertOneStopGradientsConfig,
   |     ^^^^^^

warning: associated function `parse_config` is never used
   --> crates/plugin-sdk/src/plugins/convert_style_to_attrs.rs:151:8
    |
137 | impl ConvertStyleToAttrsPlugin {
    | ------------------------------ associated function in this implementation
...
151 |     fn parse_config(params: &Value) -> Result<ConvertSty...
    |        ^^^^^^^^^^^^

warning: associated function `parse_config` is never used
  --> crates/plugin-sdk/src/plugins/inline_styles.rs:94:8
   |
80 | impl InlineStylesPlugin {
   | ----------------------- associated function in this implementation
...
94 |     fn parse_config(params: &Value) -> Result<InlineStyle...
   |        ^^^^^^^^^^^^

warning: field `source_index` is never read
   --> crates/plugin-sdk/src/plugins/inline_styles.rs:173:5
    |
169 | struct CssRuleData {
    |        ----------- field in this struct
...
173 |     source_index: usize, // Track which style element th...
    |     ^^^^^^^^^^^^
    |
    = note: `CssRuleData` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `match_counts` is never read
   --> crates/plugin-sdk/src/plugins/inline_styles.rs:182:5
    |
177 | struct InlineStylesVisitor {
    |        ------------------- field in this struct
...
182 |     match_counts: HashMap<String, usize>,
    |     ^^^^^^^^^^^^

warning: field `used_selectors` is never read
   --> crates/plugin-sdk/src/plugins/inline_styles.rs:434:5
    |
433 | struct StyleCleanerVisitor<'a> {
    |        ------------------- field in this struct
434 |     used_selectors: &'a HashSet<String>,
    |     ^^^^^^^^^^^^^^

warning: associated items `parse_config`, `can_merge_paths`, and `merge_path_data` are never used
   --> crates/plugin-sdk/src/plugins/merge_paths.rs:55:8
    |
41  | impl MergePathsPlugin {
    | --------------------- associated items in this implementation
...
55  |     fn parse_config(params: &Value) -> Result<MergePaths...
    |        ^^^^^^^^^^^^
...
74  |     fn can_merge_paths(&self, path1: &Element, path2: &E...
    |        ^^^^^^^^^^^^^^^
...
152 |     fn merge_path_data(&self, d1: &str, d2: &str) -> Str...
    |        ^^^^^^^^^^^^^^^

warning: field `config` is never read
   --> crates/plugin-sdk/src/plugins/merge_paths.rs:222:5
    |
221 | struct PathMergeVisitor {
    |        ---------------- field in this struct
222 |     config: MergePathsConfig,
    |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/merge_styles.rs:32:5
   |
31 | pub struct MergeStylesPlugin {
   |            ----------------- field in this struct
32 |     config: MergeStylesConfig,
   |     ^^^^^^

warning: associated function `parse_config` is never used
  --> crates/plugin-sdk/src/plugins/merge_styles.rs:49:8
   |
35 | impl MergeStylesPlugin {
   | ---------------------- associated function in this implementation
...
49 |     fn parse_config(params: &Value) -> Result<MergeStyles...
   |        ^^^^^^^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/minify_styles.rs:91:5
   |
90 | pub struct MinifyStylesPlugin {
   |            ------------------ field in this struct
91 |     config: MinifyStylesConfig,
   |     ^^^^^^

warning: methods `has_scripts`, `collect_usage`, `collect_usage_recursive`, and `is_deoptimized` are never used
   --> crates/plugin-sdk/src/plugins/minify_styles.rs:120:8
    |
94  | impl MinifyStylesPlugin {
    | ----------------------- methods in this implementation
...
120 |     fn has_scripts(&self, element: &Element) -> bool {
    |        ^^^^^^^^^^^
...
163 |     fn collect_usage(
    |        ^^^^^^^^^^^^^
...
177 |     fn collect_usage_recursive(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
208 |     fn is_deoptimized(&self, element: &Element) -> bool {
    |        ^^^^^^^^^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:30:5
   |
29 | pub struct MoveElemsAttrsToGroupPlugin {
   |            --------------------------- field in this struct
30 |     config: MoveElemsAttrsToGroupConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/move_group_attrs_to_elems.rs:29:5
   |
28 | pub struct MoveGroupAttrsToElemsPlugin {
   |            --------------------------- field in this struct
29 |     config: MoveGroupAttrsToElemsConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_dimensions.rs:30:5
   |
29 | pub struct RemoveDimensionsPlugin {
   |            ---------------------- field in this struct
30 |     config: RemoveDimensionsConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_doctype.rs:35:5
   |
34 | pub struct RemoveDoctypePlugin {
   |            ------------------- field in this struct
35 |     config: RemoveDoctypeConfig,
   |     ^^^^^^

warning: associated function `parse_config` is never used
  --> crates/plugin-sdk/src/plugins/remove_doctype.rs:52:8
   |
38 | impl RemoveDoctypePlugin {
   | ------------------------ associated function in this implementation
...
52 |     fn parse_config(params: &Value) -> Result<RemoveDocty...
   |        ^^^^^^^^^^^^

warning: associated function `parse_config` is never used
  --> crates/plugin-sdk/src/plugins/remove_editors_ns_data.rs:87:8
   |
73 | impl RemoveEditorsNSDataPlugin {
   | ------------------------------ associated function in this implementation
...
87 |     fn parse_config(params: &Value) -> Result<RemoveEdito...
   |        ^^^^^^^^^^^^

warning: field `config` is never read
   --> crates/plugin-sdk/src/plugins/remove_editors_ns_data.rs:177:5
    |
176 | struct EditorsNSDataRemovalVisitor {
    |        --------------------------- field in this struct
177 |     config: RemoveEditorsNSDataConfig,
    |     ^^^^^^

warning: associated function `parse_config` is never used
   --> crates/plugin-sdk/src/plugins/remove_hidden_elems.rs:141:8
    |
127 | impl RemoveHiddenElemsPlugin {
    | ---------------------------- associated function in this implementation
...
141 |     fn parse_config(params: &Value) -> Result<RemoveHidd...
    |        ^^^^^^^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_metadata.rs:32:5
   |
31 | pub struct RemoveMetadataPlugin {
   |            -------------------- field in this struct
32 |     config: RemoveMetadataConfig,
   |     ^^^^^^

warning: associated function `parse_config` is never used
  --> crates/plugin-sdk/src/plugins/remove_metadata.rs:49:8
   |
35 | impl RemoveMetadataPlugin {
   | ------------------------- associated function in this implementation
...
49 |     fn parse_config(params: &Value) -> Result<RemoveMetad...
   |        ^^^^^^^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_off_canvas_paths.rs:37:5
   |
36 | pub struct RemoveOffCanvasPathsPlugin {
   |            -------------------------- field in this struct
37 |     config: RemoveOffCanvasPathsConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_style_element.rs:31:5
   |
30 | pub struct RemoveStyleElementPlugin {
   |            ------------------------ field in this struct
31 |     config: RemoveStyleElementConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_title.rs:32:5
   |
31 | pub struct RemoveTitlePlugin {
   |            ----------------- field in this struct
32 |     config: RemoveTitleConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_unused_ns.rs:30:5
   |
29 | pub struct RemoveUnusedNSPlugin {
   |            -------------------- field in this struct
30 |     config: RemoveUnusedNSConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_useless_transforms.rs:28:5
   |
27 | pub struct RemoveUselessTransformsPlugin {
   |            ----------------------------- field in this struct
28 |     config: RemoveUselessTransformsConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_xml_proc_inst.rs:30:5
   |
29 | pub struct RemoveXMLProcInstPlugin {
   |            ----------------------- field in this struct
30 |     config: RemoveXMLProcInstConfig,
   |     ^^^^^^

warning: associated function `parse_config` is never used
  --> crates/plugin-sdk/src/plugins/remove_xml_proc_inst.rs:47:8
   |
33 | impl RemoveXMLProcInstPlugin {
   | ---------------------------- associated function in this implementation
...
47 |     fn parse_config(params: &Value) -> Result<RemoveXMLPr...
   |        ^^^^^^^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/remove_xmlns.rs:29:5
   |
28 | pub struct RemoveXmlnsPlugin {
   |            ----------------- field in this struct
29 |     config: RemoveXmlnsConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/reuse_paths.rs:30:5
   |
29 | pub struct ReusePathsPlugin {
   |            ---------------- field in this struct
30 |     config: ReusePathsConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/sort_defs_children.rs:33:5
   |
32 | pub struct SortDefsChildrenPlugin {
   |            ---------------------- field in this struct
33 |     config: SortDefsChildrenConfig,
   |     ^^^^^^

warning: `vexy_svgo-core` (lib) generated 5 warnings (run `cargo fix --lib -p vexy_svgo-core` to apply 2 suggestions)
warning: `vexy_svgo-core` (lib) generated 5 warnings (5 duplicates)
warning: `vexy_svgo-plugin-sdk` (lib) generated 75 warnings (run `cargo fix --lib -p vexy_svgo-plugin-sdk` to apply 17 suggestions)
   Compiling vexy_svgo-cli v2.1.0 (/Users/adam/Developer/vcs/github.twardoch/pub/vexy_svgo/crates/cli)
   Compiling vexy_svgo-wasm v2.1.0 (/Users/adam/Developer/vcs/github.twardoch/pub/vexy_svgo/crates/wasm)
   Compiling vexy_svgo-ffi v2.1.0 (/Users/adam/Developer/vcs/github.twardoch/pub/vexy_svgo/crates/ffi)
error[E0432]: unresolved import `vexy_svgo_core::config::QuoteAttrsStyle`
 --> crates/test-utils/tests/compat.rs:7:52
  |
7 | ...s, LineEnding, QuoteAttrsStyle};
  |                   ^^^^^^^^^^^^^^^ no `QuoteAttrsStyle` in `parser::config`

error[E0615]: attempted to take value of method `params` on type `vexy_svgo_core::PluginConfig`
  --> crates/test-utils/tests/compat.rs:22:20
   |
22 |             plugin.params = params.clone();
   |                    ^^^^^^ method, not a field
   |
   = help: methods are immutable and cannot be assigned to

error[E0106]: missing lifetime specifier
   --> crates/core/src/utils/selectors.rs:144:82
    |
144 | ...e: &str, id: Option<&str>, class: Option<&str>) -> Element {
    |       ----      ------------         ------------     ^^^^^^^ expected named lifetime parameter
    |
    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `name`, `id`, or `class`
help: consider introducing a named lifetime parameter
    |
144 |     fn create_test_element<'a>(name: &'a str, id: Option<&'a str>, class: Option<&'a str>) -> Element<'a> {
    |                           ++++        ++                  ++                      ++                 ++++

warning: unused import: `Plugin`
 --> crates/plugin-sdk/tests/registry_test.rs:9:23
  |
9 | use vexy_svgo_plugin_sdk::{Plugin, plugins::{CollapseGroupsPlug...
  |                       ^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> crates/test-utils/tests/compat.rs:35:21
   |
35 |             indent: 4,
   |                     ^- help: try using a conversion method: `.to_string()`
   |                     |
   |                     expected `String`, found integer

error[E0560]: struct `Js2SvgOptions` has no field named `quote_attrs`
  --> crates/test-utils/tests/compat.rs:36:13
   |
36 |             quote_attrs: QuoteAttrsStyle::Always,
   |             ^^^^^^^^^^^ `Js2SvgOptions` does not have this field
   |
   = note: available fields are: `use_short_tags`

error[E0560]: struct `Js2SvgOptions` has no field named `self_closing`
  --> crates/test-utils/tests/compat.rs:37:13
   |
37 |             self_closing: true,
   |             ^^^^^^^^^^^^ `Js2SvgOptions` does not have this field
   |
   = note: available fields are: `use_short_tags`

warning: unused import: `serde_json::json`
   --> crates/core/src/plugin_registry.rs:295:9
    |
295 |     use serde_json::json;
    |         ^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `default` found for enum `LineEnding` in the current scope
  --> crates/test-utils/tests/compat.rs:38:30
   |
38 |             eol: LineEnding::default(),
   |                              ^^^^^^^ variant or associated item not found in `LineEnding`

error[E0560]: struct `Config` has no field named `parser`
  --> crates/test-utils/tests/compat.rs:44:9
   |
44 |         parser: Default::default(),
   |         ^^^^^^ `Config` does not have this field
   |
   = note: available fields are: `pretty`, `indent`, `parallel`

warning: unused variable: `initial_empty_attrs`
  --> crates/plugin-sdk/tests/registry_test.rs:87:9
   |
87 |     let initial_empty_attrs = count_empty_attributes(&doc...
   |         ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_initial_empty_attrs`
   |
   = note: `#[warn(unused_variables)]` on by default

error[E0560]: struct `Config` has no field named `parser`
   --> crates/test-utils/tests/compat.rs:135:9
    |
135 |         parser: Default::default(),
    |         ^^^^^^ `Config` does not have this field
    |
    = note: available fields are: `pretty`, `indent`, `parallel`

error[E0308]: mismatched types
   --> crates/test-utils/tests/compat.rs:183:21
    |
183 |             indent: 4,
    |                     ^- help: try using a conversion method: `.to_string()`
    |                     |
    |                     expected `String`, found integer

error[E0560]: struct `Js2SvgOptions` has no field named `quote_attrs`
   --> crates/test-utils/tests/compat.rs:184:13
    |
184 |             quote_attrs: QuoteAttrsStyle::Always,
    |             ^^^^^^^^^^^ `Js2SvgOptions` does not have this field
    |
    = note: available fields are: `use_short_tags`

error[E0560]: struct `Js2SvgOptions` has no field named `self_closing`
   --> crates/test-utils/tests/compat.rs:185:13
    |
185 |             self_closing: true,
    |             ^^^^^^^^^^^^ `Js2SvgOptions` does not have this field
    |
    = note: available fields are: `use_short_tags`

error[E0599]: no variant or associated item named `default` found for enum `LineEnding` in the current scope
   --> crates/test-utils/tests/compat.rs:186:30
    |
186 |             eol: LineEnding::default(),
    |                              ^^^^^^^ variant or associated item not found in `LineEnding`

error[E0560]: struct `Config` has no field named `parser`
   --> crates/test-utils/tests/compat.rs:192:9
    |
192 |         parser: Default::default(),
    |         ^^^^^^ `Config` does not have this field
    |
    = note: available fields are: `pretty`, `indent`, `parallel`

error[E0560]: struct `Config` has no field named `parser`
   --> crates/test-utils/tests/compat.rs:235:13
    |
235 |             parser: Default::default(),
    |             ^^^^^^ `Config` does not have this field
    |
    = note: available fields are: `pretty`, `indent`, `parallel`

error[E0560]: struct `Config` has no field named `parser`
   --> crates/test-utils/tests/compat.rs:267:9
    |
267 |         parser: Default::default(),
    |         ^^^^^^ `Config` does not have this field
    |
    = note: available fields are: `pretty`, `indent`, `parallel`

error[E0308]: mismatched types
   --> crates/test-utils/tests/compat.rs:291:21
    |
291 |             indent: 2,
    |                     ^- help: try using a conversion method: `.to_string()`
    |                     |
    |                     expected `String`, found integer

error[E0560]: struct `Js2SvgOptions` has no field named `quote_attrs`
   --> crates/test-utils/tests/compat.rs:292:13
    |
292 |             quote_attrs: QuoteAttrsStyle::Always,
    |             ^^^^^^^^^^^ `Js2SvgOptions` does not have this field
    |
    = note: available fields are: `use_short_tags`

error[E0560]: struct `Js2SvgOptions` has no field named `self_closing`
   --> crates/test-utils/tests/compat.rs:293:13
    |
293 |             self_closing: true,
    |             ^^^^^^^^^^^^ `Js2SvgOptions` does not have this field
    |
    = note: available fields are: `use_short_tags`

error[E0599]: no variant or associated item named `default` found for enum `LineEnding` in the current scope
   --> crates/test-utils/tests/compat.rs:294:30
    |
294 |             eol: LineEnding::default(),
    |                              ^^^^^^^ variant or associated item not found in `LineEnding`

error[E0560]: struct `Config` has no field named `parser`
   --> crates/test-utils/tests/compat.rs:300:9
    |
300 |         parser: Default::default(),
    |         ^^^^^^ `Config` does not have this field
    |
    = note: available fields are: `pretty`, `indent`, `parallel`

error[E0308]: mismatched types
   --> crates/test-utils/tests/compat.rs:313:21
    |
313 |             indent: 0,
    |                     ^- help: try using a conversion method: `.to_string()`
    |                     |
    |                     expected `String`, found integer

error[E0560]: struct `Js2SvgOptions` has no field named `quote_attrs`
   --> crates/test-utils/tests/compat.rs:314:13
    |
314 |             quote_attrs: QuoteAttrsStyle::Always,
    |             ^^^^^^^^^^^ `Js2SvgOptions` does not have this field
    |
    = note: available fields are: `use_short_tags`

error[E0560]: struct `Js2SvgOptions` has no field named `self_closing`
   --> crates/test-utils/tests/compat.rs:315:13
    |
315 |             self_closing: true,
    |             ^^^^^^^^^^^^ `Js2SvgOptions` does not have this field
    |
    = note: available fields are: `use_short_tags`

error[E0599]: no variant or associated item named `default` found for enum `LineEnding` in the current scope
   --> crates/test-utils/tests/compat.rs:316:30
    |
316 |             eol: LineEnding::default(),
    |                              ^^^^^^^ variant or associated item not found in `LineEnding`

error[E0560]: struct `Config` has no field named `parser`
   --> crates/test-utils/tests/compat.rs:322:9
    |
322 |         parser: Default::default(),
    |         ^^^^^^ `Config` does not have this field
    |
    = note: available fields are: `pretty`, `indent`, `parallel`

Some errors have detailed explanations: E0308, E0432, E0560, E0599, E0615.
For more information about an error, try `rustc --explain E0308`.
error: could not compile `vexy_svgo-test-utils` (test "compat") due to 25 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0308]: mismatched types
    --> crates/core/src/optimizer/mod.rs:299:19
     |
299  | ...  .push(PluginConfig::new("removeComments".to_string()));
     |       ---- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `config::PluginConfig`, found `plugin_registry::PluginConfig`
     |       |
     |       arguments to this method are incorrect
     |
     = note: `plugin_registry::PluginConfig` and `config::PluginConfig` have similar names, but are actually distinct types
note: `plugin_registry::PluginConfig` is defined in module `crate::plugin_registry` of the current crate
    --> crates/core/src/plugin_registry.rs:55:1
     |
55   | pub struct PluginConfig {
     | ^^^^^^^^^^^^^^^^^^^^^^^
note: `config::PluginConfig` is defined in module `crate::parser::config` of the current crate
    --> crates/core/src/parser/config.rs:65:1
     |
65   | pub enum PluginConfig {
     | ^^^^^^^^^^^^^^^^^^^^^
note: method defined here
    --> /Users/adam/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2442:12
     |
2442 |     pub fn push(&mut self, value: T) {
     |            ^^^^

error[E0308]: mismatched types
   --> crates/core/src/optimizer/mod.rs:316:32
    |
316 |         config.js2svg.indent = 4;
    |         --------------------   ^- help: try using a conversion method: `.to_string()`
    |         |                      |
    |         |                      expected `String`, found integer
    |         expected due to the type of this binding

warning: unused import: `std::collections::HashMap`
   --> crates/plugin-sdk/src/plugins/convert_one_stop_gradients.rs:318:13
    |
318 |         use std::collections::HashMap;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `vexy_svgo_core::ast::*`
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:235:9
    |
235 |     use vexy_svgo_core::ast::*;
    |         ^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
   --> crates/plugin-sdk/src/plugins/remove_deprecated_attrs.rs:382:9
    |
382 |     use std::collections::HashMap;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
   --> crates/plugin-sdk/src/plugins/remove_dimensions.rs:130:9
    |
130 |     use std::collections::HashMap;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
   --> crates/plugin-sdk/src/plugins/remove_elements_by_attr.rs:180:9
    |
180 |     use std::collections::HashMap;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
   --> crates/plugin-sdk/src/plugins/remove_empty_attrs.rs:120:9
    |
120 |     use std::collections::HashMap;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Element`
   --> crates/plugin-sdk/src/plugins/remove_empty_attrs.rs:121:36
    |
121 |     use vexy_svgo_core::ast::{Document, Element};
    |                                    ^^^^^^^

warning: unused import: `Document`
   --> crates/plugin-sdk/src/plugins/reuse_paths.rs:336:26
    |
336 |     use vexy_svgo_core::ast::{Document, Element, Node};
    |                          ^^^^^^^^

warning: unused import: `anyhow`
  --> crates/plugin-sdk/src/test_framework.rs:14:14
   |
14 | use anyhow::{anyhow, Result};
   |              ^^^^^^

warning: unused import: `PathBuf`
  --> crates/plugin-sdk/src/test_utils.rs:12:23
   |
12 | use std::path::{Path, PathBuf};
   |                       ^^^^^^^

warning: unused import: `vexy_svgo_core::ast::Document`
  --> crates/plugin-sdk/src/test_utils.rs:13:5
   |
13 | use vexy_svgo_core::ast::Document;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

Some errors have detailed explanations: E0106, E0308.
For more information about an error, try `rustc --explain E0106`.
warning: `vexy_svgo-core` (lib test) generated 5 warnings (4 duplicates)
error: could not compile `vexy_svgo-core` (lib test) due to 3 previous errors; 5 warnings emitted
warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/property_tests.rs:149:13
    |
149 |         let mut plugin_clone = plugin.clone();
    |             ----^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/property_tests.rs:160:13
    |
160 |         let mut plugin_clone = plugin.clone();
    |             ----^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/property_tests.rs:175:13
    |
175 |         let mut plugin1 = plugin.clone();
    |             ----^^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/property_tests.rs:176:13
    |
176 |         let mut plugin2 = plugin.clone();
    |             ----^^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:275:13
    |
275 | ...   let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |           ----^^^^^^
    |           |
    |           help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:310:13
    |
310 | ...   let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |           ----^^^^^^
    |           |
    |           help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:340:13
    |
340 | ...   let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |           ----^^^^^^
    |           |
    |           help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:379:13
    |
379 | ...   let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |           ----^^^^^^
    |           |
    |           help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:408:13
    |
408 | ...   let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |           ----^^^^^^
    |           |
    |           help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/test_framework.rs:237:52
    |
237 | ...gin>(&self, mut plugin: P, generator: &dyn TestCaseGe...
    |                ----^^^^^^
    |                |
    |                help: remove this `mut`

warning: unused variable: `test_cases`
   --> crates/plugin-sdk/src/property_tests.rs:195:67
    |
195 | ...lone>(plugin: P, test_cases: u32) -> Result<()> {
    |                     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_test_cases`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/lib.rs:270:13
    |
270 |         let mut registry = PluginRegistry::new();
    |             ----^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: field `config` is never read
  --> crates/plugin-sdk/src/plugins/cleanup_enable_background.rs:32:5
   |
31 | pub struct CleanupEnableBackgroundPlugin {
   |            ----------------------------- field in this struct
32 |     config: CleanupEnableBackgroundConfig,
   |     ^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: method `is_deoptimized` is never used
   --> crates/plugin-sdk/src/plugins/minify_styles.rs:208:8
    |
94  | impl MinifyStylesPlugin {
    | ----------------------- method in this implementation
...
208 |     fn is_deoptimized(&self, element: &Element) -> bool {
    |        ^^^^^^^^^^^^^^

warning: `vexy_svgo-plugin-sdk` (test "registry_test") generated 2 warnings
    Building [=======================> ] 452/456: vexy_svgo_plugi...