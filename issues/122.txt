     |
283  |             let attr_names: Vec<&String> = elem.attributes.keys().collect();
     |                                            --------------- ^^^^^^ `Iterator::Item` is `&Cow<'_, str>` here
     |                                            |
     |                                            this expression has type `IndexMap<Cow<'_, str>, Cow<'_, str>>`
note: required by a bound in `collect`
    --> /Users/adam/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:1988:19
     |
1988 |     fn collect<B: FromIterator<Self::Item>>(self) -> B
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::collect`

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:298:14
    |
298 |             .insert("width".to_string(), "100".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:298:21
    |
298 |             .insert("width".to_string(), "100".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:298:42
    |
298 |             .insert("width".to_string(), "100".to_string());
    |                                          ^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:297:9
    |
297 | /         svg.attributes
298 | |             .insert("width".to_string(), "100".to_string());
    | |__________________________________________-----------------^
    |                                            |
    |                                            this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
298 |             .insert("width".to_string().into(), "100".to_string());
    |                                        +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
298 |             .insert("width".to_string(), "100".to_string().into());
    |                                                           +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:299:24
    |
299 |         svg.attributes.insert(
    |                        ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:300:13
    |
300 |             "xmlns:xlink".to_string(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:301:13
    |
301 |             "http://www.w3.org/1999/xlink".to_string(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:299:9
    |
299 | /         svg.attributes.insert(
300 | |             "xmlns:xlink".to_string(),
301 | |             "http://www.w3.org/1999/xlink".to_string(),
    | |             ------------------------------------------ this argument influences the return type of `insert`
302 | |         );
    | |_________^
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
300 |             "xmlns:xlink".to_string().into(),
    |                                      +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
301 |             "http://www.w3.org/1999/xlink".to_string().into(),
    |                                                       +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:303:24
    |
303 |         svg.attributes.insert(
    |                        ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:304:13
    |
304 |             "xmlns".to_string(),
    |             ^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:305:13
    |
305 |             "http://www.w3.org/2000/svg".to_string(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:303:9
    |
303 | /         svg.attributes.insert(
304 | |             "xmlns".to_string(),
305 | |             "http://www.w3.org/2000/svg".to_string(),
    | |             ---------------------------------------- this argument influences the return type of `insert`
306 | |         );
    | |_________^
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
304 |             "xmlns".to_string().into(),
    |                                +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
305 |             "http://www.w3.org/2000/svg".to_string().into(),
    |                                                     +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:307:24
    |
307 |         svg.attributes.insert("id".to_string(), "test".to_string());
    |                        ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:307:31
    |
307 |         svg.attributes.insert("id".to_string(), "test".to_string());
    |                               ^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:307:49
    |
307 |         svg.attributes.insert("id".to_string(), "test".to_string());
    |                                                 ^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:307:9
    |
307 |         svg.attributes.insert("id".to_string(), "test".to_string());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------^
    |                                                 |
    |                                                 this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
307 |         svg.attributes.insert("id".to_string().into(), "test".to_string());
    |                                               +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
307 |         svg.attributes.insert("id".to_string(), "test".to_string().into());
    |                                                                   +++++++

error[E0277]: a value of type `Vec<&std::string::String>` cannot be built from an iterator over elements of type `&Cow<'_, str>`
    --> crates/plugin-sdk/src/plugins/sort_attrs.rs:316:67
     |
316  |             let attr_names: Vec<&String> = elem.attributes.keys().collect();
     |                                                                   ^^^^^^^ value of type `Vec<&std::string::String>` cannot be built from `std::iter::Iterator<Item=&Cow<'_, str>>`
     |
     = help: the trait `FromIterator<&Cow<'_, str>>` is not implemented for `Vec<&std::string::String>`
             but trait `FromIterator<&std::string::String>` is implemented for it
     = help: for that trait implementation, expected `std::string::String`, found `Cow<'_, str>`
note: the method call chain might not have had the expected associated types
    --> crates/plugin-sdk/src/plugins/sort_attrs.rs:316:60
     |
316  |             let attr_names: Vec<&String> = elem.attributes.keys().collect();
     |                                            --------------- ^^^^^^ `Iterator::Item` is `&Cow<'_, str>` here
     |                                            |
     |                                            this expression has type `IndexMap<Cow<'_, str>, Cow<'_, str>>`
note: required by a bound in `collect`
    --> /Users/adam/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:1988:19
     |
1988 |     fn collect<B: FromIterator<Self::Item>>(self) -> B
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::collect`

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:334:14
    |
334 |             .insert("z-index".to_string(), "1".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:334:21
    |
334 |             .insert("z-index".to_string(), "1".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:334:44
    |
334 |             .insert("z-index".to_string(), "1".to_string());
    |                                            ^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:333:9
    |
333 | /         rect.attributes
334 | |             .insert("z-index".to_string(), "1".to_string());
    | |____________________________________________---------------^
    |                                              |
    |                                              this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
334 |             .insert("z-index".to_string().into(), "1".to_string());
    |                                          +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
334 |             .insert("z-index".to_string(), "1".to_string().into());
    |                                                           +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:336:14
    |
336 |             .insert("data-custom".to_string(), "value".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:336:21
    |
336 |             .insert("data-custom".to_string(), "value".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:336:48
    |
336 |             .insert("data-custom".to_string(), "value".to_string());
    |                                                ^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:335:9
    |
335 | /         rect.attributes
336 | |             .insert("data-custom".to_string(), "value".to_string());
    | |________________________________________________-------------------^
    |                                                  |
    |                                                  this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
336 |             .insert("data-custom".to_string().into(), "value".to_string());
    |                                              +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
336 |             .insert("data-custom".to_string(), "value".to_string().into());
    |                                                                   +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:338:14
    |
338 |             .insert("aria-label".to_string(), "button".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:338:21
    |
338 |             .insert("aria-label".to_string(), "button".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:338:47
    |
338 |             .insert("aria-label".to_string(), "button".to_string());
    |                                               ^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:337:9
    |
337 | /         rect.attributes
338 | |             .insert("aria-label".to_string(), "button".to_string());
    | |_______________________________________________--------------------^
    |                                                 |
    |                                                 this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
338 |             .insert("aria-label".to_string().into(), "button".to_string());
    |                                             +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
338 |             .insert("aria-label".to_string(), "button".to_string().into());
    |                                                                   +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:362:25
    |
362 |         rect.attributes.insert("id".to_string(), "test".to_string());
    |                         ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:362:32
    |
362 |         rect.attributes.insert("id".to_string(), "test".to_string());
    |                                ^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:362:50
    |
362 |         rect.attributes.insert("id".to_string(), "test".to_string());
    |                                                  ^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:362:9
    |
362 |         rect.attributes.insert("id".to_string(), "test".to_string());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------^
    |                                                  |
    |                                                  this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
362 |         rect.attributes.insert("id".to_string().into(), "test".to_string());
    |                                                +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
362 |         rect.attributes.insert("id".to_string(), "test".to_string().into());
    |                                                                    +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:364:14
    |
364 |             .insert("height".to_string(), "100".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:364:21
    |
364 |             .insert("height".to_string(), "100".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:364:43
    |
364 |             .insert("height".to_string(), "100".to_string());
    |                                           ^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:363:9
    |
363 | /         rect.attributes
364 | |             .insert("height".to_string(), "100".to_string());
    | |___________________________________________-----------------^
    |                                             |
    |                                             this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
364 |             .insert("height".to_string().into(), "100".to_string());
    |                                         +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
364 |             .insert("height".to_string(), "100".to_string().into());
    |                                                            +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:366:14
    |
366 |             .insert("width".to_string(), "200".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:366:21
    |
366 |             .insert("width".to_string(), "200".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:366:42
    |
366 |             .insert("width".to_string(), "200".to_string());
    |                                          ^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:365:9
    |
365 | /         rect.attributes
366 | |             .insert("width".to_string(), "200".to_string());
    | |__________________________________________-----------------^
    |                                            |
    |                                            this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
366 |             .insert("width".to_string().into(), "200".to_string());
    |                                        +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
366 |             .insert("width".to_string(), "200".to_string().into());
    |                                                           +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:387:14
    |
387 |             .insert("fill-opacity".to_string(), "0.5".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:387:21
    |
387 |             .insert("fill-opacity".to_string(), "0.5".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:387:49
    |
387 |             .insert("fill-opacity".to_string(), "0.5".to_string());
    |                                                 ^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:386:9
    |
386 | /         rect.attributes
387 | |             .insert("fill-opacity".to_string(), "0.5".to_string());
    | |_________________________________________________-----------------^
    |                                                   |
    |                                                   this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
387 |             .insert("fill-opacity".to_string().into(), "0.5".to_string());
    |                                               +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
387 |             .insert("fill-opacity".to_string(), "0.5".to_string().into());
    |                                                                  +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:389:14
    |
389 |             .insert("fill".to_string(), "red".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:389:21
    |
389 |             .insert("fill".to_string(), "red".to_string());
    |                     ^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:389:41
    |
389 |             .insert("fill".to_string(), "red".to_string());
    |                                         ^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:388:9
    |
388 | /         rect.attributes
389 | |             .insert("fill".to_string(), "red".to_string());
    | |_________________________________________-----------------^
    |                                           |
    |                                           this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
389 |             .insert("fill".to_string().into(), "red".to_string());
    |                                       +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
389 |             .insert("fill".to_string(), "red".to_string().into());
    |                                                          +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:391:14
    |
391 |             .insert("stroke-width".to_string(), "2".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:391:21
    |
391 |             .insert("stroke-width".to_string(), "2".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:391:49
    |
391 |             .insert("stroke-width".to_string(), "2".to_string());
    |                                                 ^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:390:9
    |
390 | /         rect.attributes
391 | |             .insert("stroke-width".to_string(), "2".to_string());
    | |_________________________________________________---------------^
    |                                                   |
    |                                                   this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
391 |             .insert("stroke-width".to_string().into(), "2".to_string());
    |                                               +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
391 |             .insert("stroke-width".to_string(), "2".to_string().into());
    |                                                                +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:393:14
    |
393 |             .insert("stroke".to_string(), "blue".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:393:21
    |
393 |             .insert("stroke".to_string(), "blue".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:393:43
    |
393 |             .insert("stroke".to_string(), "blue".to_string());
    |                                           ^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:392:9
    |
392 | /         rect.attributes
393 | |             .insert("stroke".to_string(), "blue".to_string());
    | |___________________________________________------------------^
    |                                             |
    |                                             this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
393 |             .insert("stroke".to_string().into(), "blue".to_string());
    |                                         +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
393 |             .insert("stroke".to_string(), "blue".to_string().into());
    |                                                             +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:415:14
    |
415 |             .insert("transform".to_string(), "translate(10,20)".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:415:21
    |
415 |             .insert("transform".to_string(), "translate(10,20)".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:415:46
    |
415 |             .insert("transform".to_string(), "translate(10,20)".to_string());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:413:9
    |
413 | /         group
414 | |             .attributes
415 | |             .insert("transform".to_string(), "translate(10,20)".to_string());
    | |______________________________________________------------------------------^
    |                                                |
    |                                                this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
415 |             .insert("transform".to_string().into(), "translate(10,20)".to_string());
    |                                            +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
415 |             .insert("transform".to_string(), "translate(10,20)".to_string().into());
    |                                                                            +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:418:14
    |
418 |             .insert("id".to_string(), "group1".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:418:21
    |
418 |             .insert("id".to_string(), "group1".to_string());
    |                     ^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:418:39
    |
418 |             .insert("id".to_string(), "group1".to_string());
    |                                       ^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:416:9
    |
416 | /         group
417 | |             .attributes
418 | |             .insert("id".to_string(), "group1".to_string());
    | |_______________________________________--------------------^
    |                                         |
    |                                         this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
418 |             .insert("id".to_string().into(), "group1".to_string());
    |                                     +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
418 |             .insert("id".to_string(), "group1".to_string().into());
    |                                                           +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:422:14
    |
422 |             .insert("height".to_string(), "100".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:422:21
    |
422 |             .insert("height".to_string(), "100".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:422:43
    |
422 |             .insert("height".to_string(), "100".to_string());
    |                                           ^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:421:9
    |
421 | /         rect.attributes
422 | |             .insert("height".to_string(), "100".to_string());
    | |___________________________________________-----------------^
    |                                             |
    |                                             this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
422 |             .insert("height".to_string().into(), "100".to_string());
    |                                         +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
422 |             .insert("height".to_string(), "100".to_string().into());
    |                                                            +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:424:14
    |
424 |             .insert("width".to_string(), "200".to_string());
    |              ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:424:21
    |
424 |             .insert("width".to_string(), "200".to_string());
    |                     ^^^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:424:42
    |
424 |             .insert("width".to_string(), "200".to_string());
    |                                          ^^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:423:9
    |
423 | /         rect.attributes
424 | |             .insert("width".to_string(), "200".to_string());
    | |__________________________________________-----------------^
    |                                            |
    |                                            this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
424 |             .insert("width".to_string().into(), "200".to_string());
    |                                        +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
424 |             .insert("width".to_string(), "200".to_string().into());
    |                                                           +++++++

error[E0308]: arguments to this method are incorrect
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:425:25
    |
425 |         rect.attributes.insert("x".to_string(), "10".to_string());
    |                         ^^^^^^
    |
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:425:32
    |
425 |         rect.attributes.insert("x".to_string(), "10".to_string());
    |                                ^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
note: expected `Cow<'_, str>`, found `String`
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:425:49
    |
425 |         rect.attributes.insert("x".to_string(), "10".to_string());
    |                                                 ^^^^^^^^^^^^^^^^
    = note: expected enum `Cow<'_, str>`
             found struct `std::string::String`
help: the return type of this call is `std::string::String` due to the type of the argument passed
   --> crates/plugin-sdk/src/plugins/sort_attrs.rs:425:9
    |
425 |         rect.attributes.insert("x".to_string(), "10".to_string());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^----------------^
    |                                                 |
    |                                                 this argument influences the return type of `insert`
note: method defined here
   --> /Users/adam/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.10.0/src/map.rs:446:12
    |
446 |     pub fn insert(&mut self, key: K, value: V) -> Option<V> {
    |            ^^^^^^
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
425 |         rect.attributes.insert("x".to_string().into(), "10".to_string());
    |                                               +++++++
help: call `Into::into` on this expression to convert `std::string::String` into `Cow<'_, str>`
    |
425 |         rect.attributes.insert("x".to_string(), "10".to_string().into());
    |                                                                 +++++++

warning: unused import: `super`
   --> crates/plugin-sdk/src/plugin_test_macros.rs:50:17
    |
50  |             use super::*;
    |                 ^^^^^
    |
   ::: crates/plugin-sdk/src/plugins/add_attributes_to_svg_element.rs:376:1
    |
376 | crate::plugin_fixture_tests_with_params!(AddAttributesToSVGElementPlugin, "addAttributesToSVGElement");
    | ------------------------------------------------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `crate::plugin_fixture_tests_with_params` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `super`
   --> crates/plugin-sdk/src/plugin_test_macros.rs:11:17
    |
11  |             use super::*;
    |                 ^^^^^
    |
   ::: crates/plugin-sdk/src/plugins/add_classes_to_svg_element.rs:396:1
    |
396 | crate::plugin_fixture_tests!(AddClassesToSVGElementPlugin, "addClassesToSVGElement");
    | ------------------------------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `crate::plugin_fixture_tests` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:277:13
    |
277 |         let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:312:13
    |
312 |         let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:342:13
    |
342 |         let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:381:13
    |
381 |         let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/plugins/move_elems_attrs_to_group.rs:410:13
    |
410 |         let mut plugin = MoveElemsAttrsToGroupPlugin::new();
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `test_cases`
   --> crates/plugin-sdk/src/property_tests.rs:195:67
    |
195 | ...: Plugin + Clone>(plugin: P, test_cases: u32) -> Result<()> {
    |                                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_test_cases`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: variable does not need to be mutable
   --> crates/plugin-sdk/src/lib.rs:277:13
    |
277 |         let mut registry = PluginRegistry::new();
    |             ----^^^^^^^^
    |             |
    |             help: remove this `mut`

Some errors have detailed explanations: E0277, E0308, E0428, E0432, E0599, E0658.
For more information about an error, try `rustc --explain E0277`.
warning: `vexy-svgo-plugin-sdk` (lib test) generated 46 warnings
error: could not compile `vexy-svgo-plugin-sdk` (lib test) due to 357 previous errors; 46 warnings emitted
[ERROR] Tests failed
~/Developer/vcs/github.vexyart/vexy-svgo
[01:29:20] $ 