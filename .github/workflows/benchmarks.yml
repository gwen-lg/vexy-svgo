# this_file: .github/workflows/benchmarks.yml

name: Performance Benchmarks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run benchmarks weekly on Sunday at 2 AM
    - cron: '0 2 * * 0'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          # Install SVGO for comparison benchmarks
          npm install -g svgo
          
          # Install Bun for benchmarking
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-bench-

      - name: Build release binary
        run: cargo build --release

      - name: Run Rust benchmarks
        run: |
          cd crates/benchmarks
          cargo bench --bench parser -- --output-format bencher | tee ../../parser-bench.txt
          cargo bench --bench optimization -- --output-format bencher | tee ../../optimization-bench.txt
          cargo bench --bench stringifier -- --output-format bencher | tee ../../stringifier-bench.txt
          cargo bench --bench svgo_comparison -- --output-format bencher | tee ../../comparison-bench.txt || true

      - name: Run comparative benchmarks
        run: |
          # Create test data directory
          mkdir -p testdata
          
          # Generate test SVG files
          cat > testdata/simple.svg << 'EOF'
          <svg width="100" height="100">
            <rect x="10" y="10" width="80" height="80" fill="red"/>
            <circle cx="50" cy="50" r="30" fill="blue" opacity="0.5"/>
          </svg>
          EOF
          
          # Run benchmark script
          chmod +x ./scripts/benchmark1.sh
          ./scripts/benchmark1.sh testdata 3 1 || true

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        if: github.event_name != 'pull_request'
        with:
          name: Vexy SVGO Benchmarks
          tool: 'cargo'
          output-file-path: optimization-bench.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          comment-on-alert: true
          alert-threshold: '200%'
          fail-on-alert: false

      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: |
            *-bench.txt
            benchmark_results_*.csv

      - name: Benchmark summary
        run: |
          echo "## Benchmark Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Parser Performance" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -20 parser-bench.txt | grep -E "time:|ns/iter" || echo "No parser benchmarks found" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Optimization Performance" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -20 optimization-bench.txt | grep -E "time:|ns/iter" || echo "No optimization benchmarks found" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY