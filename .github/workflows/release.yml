# this_file: .github/workflows/release.yml

name: Release

on:
  push:
    tags:
      - 'v*.*.*' # Triggers on semver tags like v1.2.3

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev build-essential

      - name: Make scripts executable
        run: chmod +x ./scripts/dist/*.sh

      - name: Build Linux deliverables
        run: ./scripts/dist/build_linux.sh

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: dist/linux/*

  build-windows:
    name: Build Windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-gnu

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev build-essential zip
          rustup target add x86_64-pc-windows-gnu

      - name: Make scripts executable
        run: chmod +x ./scripts/dist/*.sh

      - name: Build Windows deliverables
        run: ./scripts/dist/build_windows.sh

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: dist/windows/*

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin, aarch64-apple-darwin

      - name: Make scripts executable
        run: chmod +x ./scripts/dist/*.sh

      - name: Build macOS deliverables
        run: ./scripts/dist/build_macos.sh

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: dist/macos/*

  build-wasm:
    name: Build WebAssembly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build WebAssembly modules
        run: |
          chmod +x ./build-wasm.sh
          ./build-wasm.sh

      - name: Build optimized WebAssembly
        run: |
          chmod +x ./build-wasm-optimized.sh
          ./build-wasm-optimized.sh

      - name: Package WASM artifacts
        run: |
          mkdir -p dist/wasm
          cp -r crates/wasm/pkg-* dist/wasm/
          cd dist/wasm
          tar -czf vexy_svgo-wasm-${{ github.ref_name }}.tar.gz pkg-*

      - name: Upload WebAssembly artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wasm-artifacts
          path: dist/wasm/*.tar.gz

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos, build-wasm]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Reorganize artifacts
        run: |
          mkdir -p dist/release
          # Move artifacts to proper structure
          mv dist/linux-artifacts/* dist/release/ 2>/dev/null || true
          mv dist/windows-artifacts/* dist/release/ 2>/dev/null || true
          mv dist/macos-artifacts/* dist/release/ 2>/dev/null || true
          mv dist/wasm-artifacts/* dist/release/ 2>/dev/null || true

          # Create checksums
          cd dist/release
          for file in *; do
            if [ -f "$file" ]; then
              sha256sum "$file" > "$file.sha256"
            fi
          done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: VexySVGO ${{ github.ref_name }}
          body: |
            # VEXYSVGO ${{ github.ref_name }}

            High-performance Rust SVG optimizer - up to 15x faster than SVGO!

            ## üöÄ What's New
            - **Complete SVGO compatibility**: All 53 plugins implemented
            - **Superior performance**: 10-15x faster than SVGO for large files
            - **Multi-platform support**: Native binaries for all major platforms
            - **WebAssembly builds**: Ready for browser and Node.js integration
            - **Professional installers**: macOS .dmg with .pkg installer

            ## üì• Downloads
            - **macOS**: Download the `.dmg` file containing a `.pkg` installer
            - **Windows**: Download the `.zip` file containing the executable
            - **Linux**: Download the `.tar.gz` file containing the binary
            - **WebAssembly**: Download the WASM modules for browser/Node.js

            ## üîê Verification
            All binaries include SHA256 checksums and are built from source by GitHub Actions.

            ## üìö Documentation
            - **[User Guide](https://twardoch.github.io/vexy_svgo/)**
            - **[API Reference](https://twardoch.github.io/vexy_svgo/api/)**
            - **[Migration Guide](https://twardoch.github.io/vexy_svgo/migration.html)**

            ## üìù Changelog
            See [CHANGELOG.md](https://github.com/vexyart/vexy-svgo/blob/main/CHANGELOG.md) for complete release notes.

            ## üôè Support
            - **Issues**: [GitHub Issues](https://github.com/vexyart/vexy-svgo/issues)
            - **Discussions**: [GitHub Discussions](https://github.com/vexyart/vexy-svgo/discussions)
          draft: false
          prerelease: false
          files: |
            dist/release/*

      - name: Output release summary
        run: |
          echo "## Release Summary"
          echo "Tag: ${{ github.ref_name }}"
          echo "Artifacts created:"
          ls -lh dist/release/
